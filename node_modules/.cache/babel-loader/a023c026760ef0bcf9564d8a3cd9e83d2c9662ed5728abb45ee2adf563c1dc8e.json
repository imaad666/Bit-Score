{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = '/api';\nexport const fetchCoinData = async coinId => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/coins/${encodeURIComponent(coinId)}`);\n    return {\n      name: data.name,\n      volumeHolder: 'N/A',\n      news: 'No recent news available',\n      parentOrg: data.asset_platform_id || 'N/A',\n      suspiciousTransactions: 'None detected'\n    };\n  } catch (error) {\n    console.error('Error fetching coin data:', error);\n    throw error;\n  }\n};\nexport const fetchTrendingCoins = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/trending`);\n    return data.map(coin => ({\n      id: coin.id,\n      name: coin.name,\n      symbol: coin.symbol,\n      marketCap: coin.market_cap,\n      price: coin.current_price\n    }));\n  } catch (error) {\n    console.error('Error fetching trending coins:', error);\n    throw error;\n  }\n};\nexport const fetchCoinDetails = async coinId => {\n  try {\n    var _data$links, _data$links$homepage, _data$links2, _data$links3, _data$links4, _data$market_data$cur, _data$market_data, _data$market_data$cur2;\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/coins/${encodeURIComponent(coinId)}`);\n    const socials = [];\n    if ((_data$links = data.links) !== null && _data$links !== void 0 && (_data$links$homepage = _data$links.homepage) !== null && _data$links$homepage !== void 0 && _data$links$homepage[0]) socials.push({\n      platform: 'Website',\n      link: data.links.homepage[0]\n    });\n    if ((_data$links2 = data.links) !== null && _data$links2 !== void 0 && _data$links2.twitter_screen_name) socials.push({\n      platform: 'Twitter',\n      link: `https://twitter.com/${data.links.twitter_screen_name}`\n    });\n    if ((_data$links3 = data.links) !== null && _data$links3 !== void 0 && _data$links3.subreddit_url) socials.push({\n      platform: 'Reddit',\n      link: data.links.subreddit_url\n    });\n    if ((_data$links4 = data.links) !== null && _data$links4 !== void 0 && _data$links4.telegram_channel_identifier) socials.push({\n      platform: 'Telegram',\n      link: `https://t.me/${data.links.telegram_channel_identifier}`\n    });\n    return {\n      name: data.name,\n      price: (_data$market_data$cur = (_data$market_data = data.market_data) === null || _data$market_data === void 0 ? void 0 : (_data$market_data$cur2 = _data$market_data.current_price) === null || _data$market_data$cur2 === void 0 ? void 0 : _data$market_data$cur2.usd) !== null && _data$market_data$cur !== void 0 ? _data$market_data$cur : null,\n      news: [],\n      highestVolumeHolder: 'N/A',\n      socials,\n      suspiciousTransactions: []\n    };\n  } catch (error) {\n    console.error('Error fetching coin details:', error);\n    throw error;\n  }\n};\nexport const fetchCoinMarketData = async coinId => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/coins/${encodeURIComponent(coinId)}/market_chart`, {\n      params: {\n        vs_currency: 'usd',\n        days: 7\n      }\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching coin market data:', error);\n    throw error;\n  }\n};\nexport const fetchSuspiciousTransactions = async _walletAddress => {\n  // Placeholder for fetching suspicious transactions related to a wallet\n  // This function should implement logic to analyze transaction history\n  // and identify any suspicious activity.\n  return [];\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchCoinData","coinId","data","get","encodeURIComponent","name","volumeHolder","news","parentOrg","asset_platform_id","suspiciousTransactions","error","console","fetchTrendingCoins","map","coin","id","symbol","marketCap","market_cap","price","current_price","fetchCoinDetails","_data$links","_data$links$homepage","_data$links2","_data$links3","_data$links4","_data$market_data$cur","_data$market_data","_data$market_data$cur2","socials","links","homepage","push","platform","link","twitter_screen_name","subreddit_url","telegram_channel_identifier","market_data","usd","highestVolumeHolder","fetchCoinMarketData","params","vs_currency","days","fetchSuspiciousTransactions","_walletAddress"],"sources":["/Users/imaad/i/Bit Score/Bit-Score/src/utils/ragModel.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = '/api';\n\nexport const fetchCoinData = async (coinId: string) => {\n    try {\n        const { data } = await axios.get(`${API_BASE_URL}/coins/${encodeURIComponent(coinId)}`);\n        return {\n            name: data.name,\n            volumeHolder: 'N/A',\n            news: 'No recent news available',\n            parentOrg: data.asset_platform_id || 'N/A',\n            suspiciousTransactions: 'None detected',\n        };\n    } catch (error) {\n        console.error('Error fetching coin data:', error);\n        throw error;\n    }\n};\n\nexport const fetchTrendingCoins = async () => {\n    try {\n        const { data } = await axios.get(`${API_BASE_URL}/trending`);\n        return data.map((coin: any) => ({\n            id: coin.id,\n            name: coin.name,\n            symbol: coin.symbol,\n            marketCap: coin.market_cap,\n            price: coin.current_price,\n        }));\n    } catch (error) {\n        console.error('Error fetching trending coins:', error);\n        throw error;\n    }\n};\n\nexport const fetchCoinDetails = async (coinId: string) => {\n    try {\n        const { data } = await axios.get(`${API_BASE_URL}/coins/${encodeURIComponent(coinId)}`);\n\n        const socials: Array<{ platform: string; link: string }> = [];\n        if (data.links?.homepage?.[0]) socials.push({ platform: 'Website', link: data.links.homepage[0] });\n        if (data.links?.twitter_screen_name) socials.push({ platform: 'Twitter', link: `https://twitter.com/${data.links.twitter_screen_name}` });\n        if (data.links?.subreddit_url) socials.push({ platform: 'Reddit', link: data.links.subreddit_url });\n        if (data.links?.telegram_channel_identifier) socials.push({ platform: 'Telegram', link: `https://t.me/${data.links.telegram_channel_identifier}` });\n\n        return {\n            name: data.name,\n            price: data.market_data?.current_price?.usd ?? null,\n            news: [],\n            highestVolumeHolder: 'N/A',\n            socials,\n            suspiciousTransactions: [],\n        };\n    } catch (error) {\n        console.error('Error fetching coin details:', error);\n        throw error;\n    }\n};\n\nexport const fetchCoinMarketData = async (coinId: string) => {\n    try {\n        const { data } = await axios.get(`${API_BASE_URL}/coins/${encodeURIComponent(coinId)}/market_chart`, {\n            params: { vs_currency: 'usd', days: 7 },\n        });\n        return data;\n    } catch (error) {\n        console.error('Error fetching coin market data:', error);\n        throw error;\n    }\n};\n\nexport const fetchSuspiciousTransactions = async (_walletAddress: string) => {\n    // Placeholder for fetching suspicious transactions related to a wallet\n    // This function should implement logic to analyze transaction history\n    // and identify any suspicious activity.\n    return [] as any[];\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}