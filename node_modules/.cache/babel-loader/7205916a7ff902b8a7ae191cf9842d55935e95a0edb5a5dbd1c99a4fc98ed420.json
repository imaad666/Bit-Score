{"ast":null,"code":"var _jsxFileName = \"/Users/imaad/i/Bit Score/Bit-Score/src/components/WalletConnect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnect = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setWalletAddress(accounts[0]);\n        setIsConnected(true);\n      } catch (error) {\n        console.error(\"Error connecting to wallet:\", error);\n      }\n    } else {\n      alert('Please install a Web3 wallet like MetaMask to use this feature.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connect\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Wallet: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(WalletConnect, \"sjyewvkkSa05Xnf5EU2cSQGmZrU=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WalletConnect","_s","isConnected","setIsConnected","walletAddress","setWalletAddress","connectWallet","window","ethereum","accounts","request","method","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/imaad/i/Bit Score/Bit-Score/src/components/WalletConnect.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst WalletConnect: React.FC = () => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [walletAddress, setWalletAddress] = useState('');\n\n    const connectWallet = async () => {\n        if (window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n                setWalletAddress(accounts[0]);\n                setIsConnected(true);\n            } catch (error) {\n                console.error(\"Error connecting to wallet:\", error);\n            }\n        } else {\n            alert('Please install a Web3 wallet like MetaMask to use this feature.');\n        }\n    };\n\n    return (\n        <div className=\"wallet-connect\">\n            {isConnected ? (\n                <div>\n                    <p>Connected Wallet: {walletAddress}</p>\n                </div>\n            ) : (\n                <button onClick={connectWallet}>Connect Wallet</button>\n            )}\n        </div>\n    );\n};\n\nexport default WalletConnect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACjB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjFN,gBAAgB,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC7BN,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC,MAAM;MACHE,KAAK,CAAC,iEAAiE,CAAC;IAC5E;EACJ,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1Bd,WAAW,gBACRH,OAAA;MAAAiB,QAAA,eACIjB,OAAA;QAAAiB,QAAA,GAAG,oBAAkB,EAACZ,aAAa;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,gBAENrB,OAAA;MAAQsB,OAAO,EAAEf,aAAc;MAAAU,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CA7BID,aAAuB;AAAAsB,EAAA,GAAvBtB,aAAuB;AA+B7B,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}